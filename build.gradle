/*
 * Licensed to Elasticsearch under one or more contributor
 * license agreements. See the NOTICE file distributed with
 * this work for additional information regarding copyright
 * ownership. Elasticsearch licenses this file to you under
 * the Apache License, Version 2.0 (the "License"); you may
 * not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */
import org.elasticsearch.gradle.testclusters.TestClustersRegistry
import org.elasticsearch.gradle.testclusters.TestClustersPlugin

buildscript {
  repositories {
    mavenLocal()
    mavenCentral()
    jcenter()
  }
  dependencies {
    classpath "org.elasticsearch.gradle:build-tools:7.5.0"
  }
}

apply plugin: 'elasticsearch.esplugin'

version = '7.5.0'
esplugin {
  name 'analysis-morphology'
  description 'English and Russian Morphology for ElasticSearch.'
  classname 'org.elasticsearch.plugin.analysis.morphology.AnalysisMorphologyPlugin'
  dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
  }
}
esplugin.version = version


configurations.whenObjectAdded {c ->
  if (c.name == 'elasticsearch_7.5.0_integ_test_zip_null'){
	project.dependencies.add('elasticsearch_7.5.0_integ_test_zip_null', 'org.elasticsearch.distribution.integ-test-zip:elasticsearch:7.5.0@zip')
  }
}

thirdPartyAudit.enabled = false
dependencyLicenses.enabled = false
checkstyleTest.enabled = false
testingConventions.enabled = false

project.licenseFile = project.rootProject.file('LICENSE.txt')
project.noticeFile = project.rootProject.file('NOTICE.txt')

TestClustersRegistry registry = project.rootProject.extensions.create("testClustersRegistry", TestClustersRegistry)
TestClustersPlugin.configureClaimClustersHook(project.gradle, registry)
TestClustersPlugin.configureStartClustersHook(project.gradle, registry)
TestClustersPlugin.configureStopClustersHook(project.gradle, registry)